"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/useAITeacher.js":
/*!***********************************!*\
  !*** ./src/hooks/useAITeacher.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   teachers: function() { return /* binding */ teachers; },\n/* harmony export */   useAITeacher: function() { return /* binding */ useAITeacher; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n\nconst teachers = [\n    \"Nanami\",\n    \"Naoki\"\n];\nconst useAITeacher = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)((set, get)=>({\n        messages: [],\n        currentMessage: null,\n        teacher: teachers[0],\n        language: \"English\",\n        classroom: \"default\",\n        speech: \"formal\",\n        loading: false,\n        lessonData: null,\n        userInteracted: false,\n        setTeacher: (teacher)=>{\n            set(()=>({}));\n            set(()=>({\n                    teacher,\n                    messages: get().messages.map((message)=>({\n                            ...message,\n                            audioPlayer: null\n                        }))\n                }));\n        },\n        setLanguage: (language)=>{\n            set(()=>({\n                    language\n                }));\n        },\n        setlessonData: (lessonData)=>{\n            set(()=>({\n                    lessonData\n                }));\n            get().loadLessonContent(lessonData);\n        },\n        setSpeech: (speech)=>{\n            set(()=>({\n                    speech\n                }));\n        },\n        markUserInteracted: ()=>{\n            set(()=>({\n                    userInteracted: true\n                }));\n        },\n        loadLessonContent: async (lessonData)=>{\n            var _lessonData_match;\n            const language = lessonData.replace(/-.*/, \"\");\n            const lesson = (_lessonData_match = lessonData.match(/-(\\d+)$/)) === null || _lessonData_match === void 0 ? void 0 : _lessonData_match[1];\n            try {\n                const textPath = \"/assest/\".concat(language, \"/text/\").concat(lesson, \".txt\");\n                const audioPath = \"/assest/\".concat(language, \"/audio/\").concat(lesson, \".mp3\");\n                const textRes = await fetch(textPath);\n                const textContent = await textRes.text();\n                const audioRes = await fetch(audioPath);\n                const audioBlob = await audioRes.blob();\n                const audioUrl = URL.createObjectURL(audioBlob);\n                const audioPlayer = new Audio(audioUrl);\n                const message = {\n                    id: get().messages.length,\n                    question: \"Playing lesson: \".concat(lessonData),\n                    answer: {\n                        ReplyForUser: textContent\n                    },\n                    audioPlayer\n                };\n                set((state)=>({\n                        messages: [\n                            ...state.messages,\n                            message\n                        ],\n                        currentMessage: message\n                    }));\n                get().playMessage(message);\n            } catch (error) {\n                console.error(\"Error loading lesson content for \".concat(lessonData, \":\"), error);\n            }\n        },\n        askAI: async (question)=>{\n            if (!question) return;\n            const { speech, messages, lessonData } = get();\n            set(()=>({\n                    loading: true\n                }));\n            if (lessonData) {\n                get().loadLessonContent(lessonData);\n            } else {\n                try {\n                    const res = await fetch(\"/api/ai?question=\".concat(encodeURIComponent(question)));\n                    const data = await res.json();\n                    const message = {\n                        question,\n                        answer: data.result,\n                        id: messages.length,\n                        speech\n                    };\n                    set((state)=>({\n                            currentMessage: message,\n                            messages: [\n                                ...state.messages,\n                                message\n                            ],\n                            loading: false\n                        }));\n                    get().playMessage(message);\n                } catch (error) {\n                    console.error(\"Error fetching AI response:\", error);\n                    set(()=>({\n                            loading: false\n                        }));\n                }\n            }\n        },\n        playMessage: async (message)=>{\n            set(()=>({\n                    currentMessage: message\n                }));\n            if (!get().userInteracted) {\n                console.warn(\"Audio playback is blocked until user interaction.\");\n                return;\n            }\n            if (!message.audioPlayer) {\n                console.error(\"No audio player found for the message.\");\n                return;\n            }\n            message.audioPlayer.currentTime = 0;\n            message.audioPlayer.play();\n        },\n        stopMessage: (message)=>{\n            if (message.audioPlayer) {\n                message.audioPlayer.pause();\n                message.audioPlayer.currentTime = 0; // Reset audio to the start\n            }\n            set(()=>({\n                    currentMessage: null\n                }));\n        }\n    }));\n// Add a listener to track user interaction\nif (true) {\n    window.addEventListener(\"click\", ()=>useAITeacher.getState().markUserInteracted(), {\n        once: true\n    });\n    window.addEventListener(\"keydown\", ()=>useAITeacher.getState().markUserInteracted(), {\n        once: true\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ob29rcy91c2VBSVRlYWNoZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBRTFCLE1BQU1DLFdBQVc7SUFBQztJQUFVO0NBQVEsQ0FBQztBQUVyQyxNQUFNQyxlQUFlRiwrQ0FBTUEsQ0FBQyxDQUFDRyxLQUFLQyxNQUFTO1FBQ2hEQyxVQUFVLEVBQUU7UUFDWkMsZ0JBQWdCO1FBQ2hCQyxTQUFTTixRQUFRLENBQUMsRUFBRTtRQUNwQk8sVUFBVTtRQUNWQyxXQUFXO1FBQ1hDLFFBQVE7UUFDUkMsU0FBUztRQUNUQyxZQUFZO1FBQ1pDLGdCQUFnQjtRQUVoQkMsWUFBWSxDQUFDUDtZQUNYSixJQUFJLElBQU8sRUFBQztZQUNaQSxJQUFJLElBQU87b0JBQ1RJO29CQUNBRixVQUFVRCxNQUFNQyxRQUFRLENBQUNVLEdBQUcsQ0FBQyxDQUFDQyxVQUFhOzRCQUN6QyxHQUFHQSxPQUFPOzRCQUNWQyxhQUFhO3dCQUNmO2dCQUNGO1FBQ0Y7UUFFQUMsYUFBYSxDQUFDVjtZQUNaTCxJQUFJLElBQU87b0JBQUVLO2dCQUFTO1FBQ3hCO1FBRUFXLGVBQWUsQ0FBQ1A7WUFDZFQsSUFBSSxJQUFPO29CQUFFUztnQkFBVztZQUN4QlIsTUFBTWdCLGlCQUFpQixDQUFDUjtRQUMxQjtRQUVBUyxXQUFXLENBQUNYO1lBQ1ZQLElBQUksSUFBTztvQkFBRU87Z0JBQU87UUFDdEI7UUFFQVksb0JBQW9CO1lBQ2xCbkIsSUFBSSxJQUFPO29CQUFFVSxnQkFBZ0I7Z0JBQUs7UUFDcEM7UUFFQU8sbUJBQW1CLE9BQU9SO2dCQUVUQTtZQURmLE1BQU1KLFdBQVdJLFdBQVdXLE9BQU8sQ0FBQyxPQUFPO1lBQzNDLE1BQU1DLFVBQVNaLG9CQUFBQSxXQUFXYSxLQUFLLENBQUMsd0JBQWpCYix3Q0FBQUEsaUJBQTZCLENBQUMsRUFBRTtZQUMvQyxJQUFJO2dCQUNGLE1BQU1jLFdBQVcsV0FBNEJGLE9BQWpCaEIsVUFBUyxVQUFlLE9BQVBnQixRQUFPO2dCQUNwRCxNQUFNRyxZQUFZLFdBQTZCSCxPQUFsQmhCLFVBQVMsV0FBZ0IsT0FBUGdCLFFBQU87Z0JBRXRELE1BQU1JLFVBQVUsTUFBTUMsTUFBTUg7Z0JBQzVCLE1BQU1JLGNBQWMsTUFBTUYsUUFBUUcsSUFBSTtnQkFFdEMsTUFBTUMsV0FBVyxNQUFNSCxNQUFNRjtnQkFDN0IsTUFBTU0sWUFBWSxNQUFNRCxTQUFTRSxJQUFJO2dCQUNyQyxNQUFNQyxXQUFXQyxJQUFJQyxlQUFlLENBQUNKO2dCQUNyQyxNQUFNaEIsY0FBYyxJQUFJcUIsTUFBTUg7Z0JBRzlCLE1BQU1uQixVQUFVO29CQUNkdUIsSUFBSW5DLE1BQU1DLFFBQVEsQ0FBQ21DLE1BQU07b0JBQ3pCQyxVQUFVLG1CQUE4QixPQUFYN0I7b0JBQzdCOEIsUUFBUTt3QkFBRUMsY0FBY2I7b0JBQVk7b0JBQ3BDYjtnQkFDRjtnQkFFQWQsSUFBSSxDQUFDeUMsUUFBVzt3QkFDZHZDLFVBQVU7K0JBQUl1QyxNQUFNdkMsUUFBUTs0QkFBRVc7eUJBQVE7d0JBQ3RDVixnQkFBZ0JVO29CQUNsQjtnQkFFQVosTUFBTXlDLFdBQVcsQ0FBQzdCO1lBQ3BCLEVBQUUsT0FBTzhCLE9BQU87Z0JBQ2RDLFFBQVFELEtBQUssQ0FBQyxvQ0FBK0MsT0FBWGxDLFlBQVcsTUFBSWtDO1lBQ25FO1FBQ0Y7UUFFQUUsT0FBTyxPQUFPUDtZQUNaLElBQUksQ0FBQ0EsVUFBVTtZQUVmLE1BQU0sRUFBRS9CLE1BQU0sRUFBRUwsUUFBUSxFQUFFTyxVQUFVLEVBQUUsR0FBR1I7WUFFekNELElBQUksSUFBTztvQkFBRVEsU0FBUztnQkFBSztZQUUzQixJQUFJQyxZQUFZO2dCQUNkUixNQUFNZ0IsaUJBQWlCLENBQUNSO1lBQzFCLE9BQU87Z0JBQ0wsSUFBSTtvQkFDRixNQUFNcUMsTUFBTSxNQUFNcEIsTUFBTSxvQkFBaUQsT0FBN0JxQixtQkFBbUJUO29CQUMvRCxNQUFNVSxPQUFPLE1BQU1GLElBQUlHLElBQUk7b0JBRTNCLE1BQU1wQyxVQUFVO3dCQUNkeUI7d0JBQ0FDLFFBQVFTLEtBQUtFLE1BQU07d0JBQ25CZCxJQUFJbEMsU0FBU21DLE1BQU07d0JBQ25COUI7b0JBQ0Y7b0JBRUFQLElBQUksQ0FBQ3lDLFFBQVc7NEJBQ2R0QyxnQkFBZ0JVOzRCQUNoQlgsVUFBVTttQ0FBSXVDLE1BQU12QyxRQUFRO2dDQUFFVzs2QkFBUTs0QkFDdENMLFNBQVM7d0JBQ1g7b0JBRUFQLE1BQU15QyxXQUFXLENBQUM3QjtnQkFDcEIsRUFBRSxPQUFPOEIsT0FBTztvQkFDZEMsUUFBUUQsS0FBSyxDQUFDLCtCQUErQkE7b0JBQzdDM0MsSUFBSSxJQUFPOzRCQUFFUSxTQUFTO3dCQUFNO2dCQUM5QjtZQUNGO1FBQ0Y7UUFFQWtDLGFBQWEsT0FBTzdCO1lBQ2xCYixJQUFJLElBQU87b0JBQUVHLGdCQUFnQlU7Z0JBQVE7WUFFckMsSUFBSSxDQUFDWixNQUFNUyxjQUFjLEVBQUU7Z0JBQ3pCa0MsUUFBUU8sSUFBSSxDQUFDO2dCQUNiO1lBQ0Y7WUFFQSxJQUFJLENBQUN0QyxRQUFRQyxXQUFXLEVBQUU7Z0JBQ3hCOEIsUUFBUUQsS0FBSyxDQUFDO2dCQUNkO1lBQ0Y7WUFFQTlCLFFBQVFDLFdBQVcsQ0FBQ3NDLFdBQVcsR0FBRztZQUNsQ3ZDLFFBQVFDLFdBQVcsQ0FBQ3VDLElBQUk7UUFDMUI7UUFFQUMsYUFBYSxDQUFDekM7WUFDWixJQUFJQSxRQUFRQyxXQUFXLEVBQUU7Z0JBQ3ZCRCxRQUFRQyxXQUFXLENBQUN5QyxLQUFLO2dCQUN6QjFDLFFBQVFDLFdBQVcsQ0FBQ3NDLFdBQVcsR0FBRyxHQUFHLDJCQUEyQjtZQUNsRTtZQUNBcEQsSUFBSSxJQUFPO29CQUFFRyxnQkFBZ0I7Z0JBQUs7UUFDcEM7SUFDRixJQUFJO0FBRUosMkNBQTJDO0FBQzNDLElBQUksSUFBNkIsRUFBRTtJQUNqQ3FELE9BQU9DLGdCQUFnQixDQUFDLFNBQVMsSUFBTTFELGFBQWEyRCxRQUFRLEdBQUd2QyxrQkFBa0IsSUFBSTtRQUFFd0MsTUFBTTtJQUFLO0lBQ2xHSCxPQUFPQyxnQkFBZ0IsQ0FBQyxXQUFXLElBQU0xRCxhQUFhMkQsUUFBUSxHQUFHdkMsa0JBQWtCLElBQUk7UUFBRXdDLE1BQU07SUFBSztBQUN0RyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvaG9va3MvdXNlQUlUZWFjaGVyLmpzP2QzMmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSBcInp1c3RhbmRcIjtcclxuXHJcbmV4cG9ydCBjb25zdCB0ZWFjaGVycyA9IFtcIk5hbmFtaVwiLCBcIk5hb2tpXCJdO1xyXG5cclxuZXhwb3J0IGNvbnN0IHVzZUFJVGVhY2hlciA9IGNyZWF0ZSgoc2V0LCBnZXQpID0+ICh7XHJcbiAgbWVzc2FnZXM6IFtdLFxyXG4gIGN1cnJlbnRNZXNzYWdlOiBudWxsLFxyXG4gIHRlYWNoZXI6IHRlYWNoZXJzWzBdLFxyXG4gIGxhbmd1YWdlOiBcIkVuZ2xpc2hcIixcclxuICBjbGFzc3Jvb206IFwiZGVmYXVsdFwiLFxyXG4gIHNwZWVjaDogXCJmb3JtYWxcIixcclxuICBsb2FkaW5nOiBmYWxzZSxcclxuICBsZXNzb25EYXRhOiBudWxsLFxyXG4gIHVzZXJJbnRlcmFjdGVkOiBmYWxzZSwgXHJcblxyXG4gIHNldFRlYWNoZXI6ICh0ZWFjaGVyKSA9PiB7XHJcbiAgICBzZXQoKCkgPT4gKHt9KSk7XHJcbiAgICBzZXQoKCkgPT4gKHtcclxuICAgICAgdGVhY2hlcixcclxuICAgICAgbWVzc2FnZXM6IGdldCgpLm1lc3NhZ2VzLm1hcCgobWVzc2FnZSkgPT4gKHtcclxuICAgICAgICAuLi5tZXNzYWdlLFxyXG4gICAgICAgIGF1ZGlvUGxheWVyOiBudWxsLFxyXG4gICAgICB9KSksXHJcbiAgICB9KSk7XHJcbiAgfSxcclxuXHJcbiAgc2V0TGFuZ3VhZ2U6IChsYW5ndWFnZSkgPT4ge1xyXG4gICAgc2V0KCgpID0+ICh7IGxhbmd1YWdlIH0pKTtcclxuICB9LFxyXG5cclxuICBzZXRsZXNzb25EYXRhOiAobGVzc29uRGF0YSkgPT4ge1xyXG4gICAgc2V0KCgpID0+ICh7IGxlc3NvbkRhdGEgfSkpO1xyXG4gICAgZ2V0KCkubG9hZExlc3NvbkNvbnRlbnQobGVzc29uRGF0YSk7XHJcbiAgfSxcclxuXHJcbiAgc2V0U3BlZWNoOiAoc3BlZWNoKSA9PiB7XHJcbiAgICBzZXQoKCkgPT4gKHsgc3BlZWNoIH0pKTtcclxuICB9LFxyXG5cclxuICBtYXJrVXNlckludGVyYWN0ZWQ6ICgpID0+IHtcclxuICAgIHNldCgoKSA9PiAoeyB1c2VySW50ZXJhY3RlZDogdHJ1ZSB9KSk7XHJcbiAgfSxcclxuXHJcbiAgbG9hZExlc3NvbkNvbnRlbnQ6IGFzeW5jIChsZXNzb25EYXRhKSA9PiB7XHJcbiAgICBjb25zdCBsYW5ndWFnZSA9IGxlc3NvbkRhdGEucmVwbGFjZSgvLS4qLywgXCJcIik7XHJcbiAgICBjb25zdCBsZXNzb24gPSBsZXNzb25EYXRhLm1hdGNoKC8tKFxcZCspJC8pPy5bMV07XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCB0ZXh0UGF0aCA9IGAvYXNzZXN0LyR7bGFuZ3VhZ2V9L3RleHQvJHtsZXNzb259LnR4dGA7XHJcbiAgICAgIGNvbnN0IGF1ZGlvUGF0aCA9IGAvYXNzZXN0LyR7bGFuZ3VhZ2V9L2F1ZGlvLyR7bGVzc29ufS5tcDNgO1xyXG5cclxuICAgICAgY29uc3QgdGV4dFJlcyA9IGF3YWl0IGZldGNoKHRleHRQYXRoKTtcclxuICAgICAgY29uc3QgdGV4dENvbnRlbnQgPSBhd2FpdCB0ZXh0UmVzLnRleHQoKTtcclxuXHJcbiAgICAgIGNvbnN0IGF1ZGlvUmVzID0gYXdhaXQgZmV0Y2goYXVkaW9QYXRoKTtcclxuICAgICAgY29uc3QgYXVkaW9CbG9iID0gYXdhaXQgYXVkaW9SZXMuYmxvYigpO1xyXG4gICAgICBjb25zdCBhdWRpb1VybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYXVkaW9CbG9iKTtcclxuICAgICAgY29uc3QgYXVkaW9QbGF5ZXIgPSBuZXcgQXVkaW8oYXVkaW9VcmwpO1xyXG5cclxuXHJcbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSB7XHJcbiAgICAgICAgaWQ6IGdldCgpLm1lc3NhZ2VzLmxlbmd0aCxcclxuICAgICAgICBxdWVzdGlvbjogYFBsYXlpbmcgbGVzc29uOiAke2xlc3NvbkRhdGF9YCxcclxuICAgICAgICBhbnN3ZXI6IHsgUmVwbHlGb3JVc2VyOiB0ZXh0Q29udGVudCB9LFxyXG4gICAgICAgIGF1ZGlvUGxheWVyLFxyXG4gICAgICB9O1xyXG5cclxuICAgICAgc2V0KChzdGF0ZSkgPT4gKHtcclxuICAgICAgICBtZXNzYWdlczogWy4uLnN0YXRlLm1lc3NhZ2VzLCBtZXNzYWdlXSxcclxuICAgICAgICBjdXJyZW50TWVzc2FnZTogbWVzc2FnZSxcclxuICAgICAgfSkpO1xyXG5cclxuICAgICAgZ2V0KCkucGxheU1lc3NhZ2UobWVzc2FnZSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKGBFcnJvciBsb2FkaW5nIGxlc3NvbiBjb250ZW50IGZvciAke2xlc3NvbkRhdGF9OmAsIGVycm9yKTtcclxuICAgIH1cclxuICB9LFxyXG5cclxuICBhc2tBSTogYXN5bmMgKHF1ZXN0aW9uKSA9PiB7XHJcbiAgICBpZiAoIXF1ZXN0aW9uKSByZXR1cm47XHJcblxyXG4gICAgY29uc3QgeyBzcGVlY2gsIG1lc3NhZ2VzLCBsZXNzb25EYXRhIH0gPSBnZXQoKTtcclxuXHJcbiAgICBzZXQoKCkgPT4gKHsgbG9hZGluZzogdHJ1ZSB9KSk7XHJcblxyXG4gICAgaWYgKGxlc3NvbkRhdGEpIHtcclxuICAgICAgZ2V0KCkubG9hZExlc3NvbkNvbnRlbnQobGVzc29uRGF0YSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAvYXBpL2FpP3F1ZXN0aW9uPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHF1ZXN0aW9uKX1gKTtcclxuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcclxuXHJcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IHtcclxuICAgICAgICAgIHF1ZXN0aW9uLFxyXG4gICAgICAgICAgYW5zd2VyOiBkYXRhLnJlc3VsdCxcclxuICAgICAgICAgIGlkOiBtZXNzYWdlcy5sZW5ndGgsXHJcbiAgICAgICAgICBzcGVlY2gsXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgc2V0KChzdGF0ZSkgPT4gKHtcclxuICAgICAgICAgIGN1cnJlbnRNZXNzYWdlOiBtZXNzYWdlLFxyXG4gICAgICAgICAgbWVzc2FnZXM6IFsuLi5zdGF0ZS5tZXNzYWdlcywgbWVzc2FnZV0sXHJcbiAgICAgICAgICBsb2FkaW5nOiBmYWxzZSxcclxuICAgICAgICB9KSk7XHJcblxyXG4gICAgICAgIGdldCgpLnBsYXlNZXNzYWdlKG1lc3NhZ2UpO1xyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyBBSSByZXNwb25zZTpcIiwgZXJyb3IpO1xyXG4gICAgICAgIHNldCgoKSA9PiAoeyBsb2FkaW5nOiBmYWxzZSB9KSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9LFxyXG5cclxuICBwbGF5TWVzc2FnZTogYXN5bmMgKG1lc3NhZ2UpID0+IHtcclxuICAgIHNldCgoKSA9PiAoeyBjdXJyZW50TWVzc2FnZTogbWVzc2FnZSB9KSk7XHJcblxyXG4gICAgaWYgKCFnZXQoKS51c2VySW50ZXJhY3RlZCkge1xyXG4gICAgICBjb25zb2xlLndhcm4oXCJBdWRpbyBwbGF5YmFjayBpcyBibG9ja2VkIHVudGlsIHVzZXIgaW50ZXJhY3Rpb24uXCIpO1xyXG4gICAgICByZXR1cm47IFxyXG4gICAgfVxyXG5cclxuICAgIGlmICghbWVzc2FnZS5hdWRpb1BsYXllcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFwiTm8gYXVkaW8gcGxheWVyIGZvdW5kIGZvciB0aGUgbWVzc2FnZS5cIik7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBtZXNzYWdlLmF1ZGlvUGxheWVyLmN1cnJlbnRUaW1lID0gMDtcclxuICAgIG1lc3NhZ2UuYXVkaW9QbGF5ZXIucGxheSgpO1xyXG4gIH0sXHJcblxyXG4gIHN0b3BNZXNzYWdlOiAobWVzc2FnZSkgPT4ge1xyXG4gICAgaWYgKG1lc3NhZ2UuYXVkaW9QbGF5ZXIpIHtcclxuICAgICAgbWVzc2FnZS5hdWRpb1BsYXllci5wYXVzZSgpO1xyXG4gICAgICBtZXNzYWdlLmF1ZGlvUGxheWVyLmN1cnJlbnRUaW1lID0gMDsgLy8gUmVzZXQgYXVkaW8gdG8gdGhlIHN0YXJ0XHJcbiAgICB9XHJcbiAgICBzZXQoKCkgPT4gKHsgY3VycmVudE1lc3NhZ2U6IG51bGwgfSkpO1xyXG4gIH0sXHJcbn0pKTtcclxuXHJcbi8vIEFkZCBhIGxpc3RlbmVyIHRvIHRyYWNrIHVzZXIgaW50ZXJhY3Rpb25cclxuaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcclxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHVzZUFJVGVhY2hlci5nZXRTdGF0ZSgpLm1hcmtVc2VySW50ZXJhY3RlZCgpLCB7IG9uY2U6IHRydWUgfSk7XHJcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsICgpID0+IHVzZUFJVGVhY2hlci5nZXRTdGF0ZSgpLm1hcmtVc2VySW50ZXJhY3RlZCgpLCB7IG9uY2U6IHRydWUgfSk7XHJcbn1cclxuIl0sIm5hbWVzIjpbImNyZWF0ZSIsInRlYWNoZXJzIiwidXNlQUlUZWFjaGVyIiwic2V0IiwiZ2V0IiwibWVzc2FnZXMiLCJjdXJyZW50TWVzc2FnZSIsInRlYWNoZXIiLCJsYW5ndWFnZSIsImNsYXNzcm9vbSIsInNwZWVjaCIsImxvYWRpbmciLCJsZXNzb25EYXRhIiwidXNlckludGVyYWN0ZWQiLCJzZXRUZWFjaGVyIiwibWFwIiwibWVzc2FnZSIsImF1ZGlvUGxheWVyIiwic2V0TGFuZ3VhZ2UiLCJzZXRsZXNzb25EYXRhIiwibG9hZExlc3NvbkNvbnRlbnQiLCJzZXRTcGVlY2giLCJtYXJrVXNlckludGVyYWN0ZWQiLCJyZXBsYWNlIiwibGVzc29uIiwibWF0Y2giLCJ0ZXh0UGF0aCIsImF1ZGlvUGF0aCIsInRleHRSZXMiLCJmZXRjaCIsInRleHRDb250ZW50IiwidGV4dCIsImF1ZGlvUmVzIiwiYXVkaW9CbG9iIiwiYmxvYiIsImF1ZGlvVXJsIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwiQXVkaW8iLCJpZCIsImxlbmd0aCIsInF1ZXN0aW9uIiwiYW5zd2VyIiwiUmVwbHlGb3JVc2VyIiwic3RhdGUiLCJwbGF5TWVzc2FnZSIsImVycm9yIiwiY29uc29sZSIsImFza0FJIiwicmVzIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZGF0YSIsImpzb24iLCJyZXN1bHQiLCJ3YXJuIiwiY3VycmVudFRpbWUiLCJwbGF5Iiwic3RvcE1lc3NhZ2UiLCJwYXVzZSIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJnZXRTdGF0ZSIsIm9uY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useAITeacher.js\n"));

/***/ })

});