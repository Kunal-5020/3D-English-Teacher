"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/set-value";
exports.ids = ["vendor-chunks/set-value"];
exports.modules = {

/***/ "(ssr)/./node_modules/set-value/index.js":
/*!*****************************************!*\
  !*** ./node_modules/set-value/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*!\n * set-value <https://github.com/jonschlinkert/set-value>\n *\n * Copyright (c) 2014-2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */ \nvar split = __webpack_require__(/*! split-string */ \"(ssr)/./node_modules/split-string/index.js\");\nvar extend = __webpack_require__(/*! extend-shallow */ \"(ssr)/./node_modules/extend-shallow/index.js\");\nvar isPlainObject = __webpack_require__(/*! is-plain-object */ \"(ssr)/./node_modules/is-plain-object/index.js\");\nvar isObject = __webpack_require__(/*! is-extendable */ \"(ssr)/./node_modules/set-value/node_modules/is-extendable/index.js\");\nmodule.exports = function(obj, prop, val) {\n    if (!isObject(obj)) {\n        return obj;\n    }\n    if (Array.isArray(prop)) {\n        prop = [].concat.apply([], prop).join(\".\");\n    }\n    if (typeof prop !== \"string\") {\n        return obj;\n    }\n    var keys = split(prop, {\n        sep: \".\",\n        brackets: true\n    }).filter(isValidKey);\n    var len = keys.length;\n    var idx = -1;\n    var current = obj;\n    while(++idx < len){\n        var key = keys[idx];\n        if (idx !== len - 1) {\n            if (!isObject(current[key])) {\n                current[key] = {};\n            }\n            current = current[key];\n            continue;\n        }\n        if (isPlainObject(current[key]) && isPlainObject(val)) {\n            current[key] = extend({}, current[key], val);\n        } else {\n            current[key] = val;\n        }\n    }\n    return obj;\n};\nfunction isValidKey(key) {\n    return key !== \"__proto__\" && key !== \"constructor\" && key !== \"prototype\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2V0LXZhbHVlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7OztDQUtDLEdBRUQ7QUFFQSxJQUFJQSxRQUFRQyxtQkFBT0EsQ0FBQztBQUNwQixJQUFJQyxTQUFTRCxtQkFBT0EsQ0FBQztBQUNyQixJQUFJRSxnQkFBZ0JGLG1CQUFPQSxDQUFDO0FBQzVCLElBQUlHLFdBQVdILG1CQUFPQSxDQUFDO0FBRXZCSSxPQUFPQyxPQUFPLEdBQUcsU0FBU0MsR0FBRyxFQUFFQyxJQUFJLEVBQUVDLEdBQUc7SUFDdEMsSUFBSSxDQUFDTCxTQUFTRyxNQUFNO1FBQ2xCLE9BQU9BO0lBQ1Q7SUFFQSxJQUFJRyxNQUFNQyxPQUFPLENBQUNILE9BQU87UUFDdkJBLE9BQU8sRUFBRSxDQUFDSSxNQUFNLENBQUNDLEtBQUssQ0FBQyxFQUFFLEVBQUVMLE1BQU1NLElBQUksQ0FBQztJQUN4QztJQUVBLElBQUksT0FBT04sU0FBUyxVQUFVO1FBQzVCLE9BQU9EO0lBQ1Q7SUFFQSxJQUFJUSxPQUFPZixNQUFNUSxNQUFNO1FBQUNRLEtBQUs7UUFBS0MsVUFBVTtJQUFJLEdBQUdDLE1BQU0sQ0FBQ0M7SUFDMUQsSUFBSUMsTUFBTUwsS0FBS00sTUFBTTtJQUNyQixJQUFJQyxNQUFNLENBQUM7SUFDWCxJQUFJQyxVQUFVaEI7SUFFZCxNQUFPLEVBQUVlLE1BQU1GLElBQUs7UUFDbEIsSUFBSUksTUFBTVQsSUFBSSxDQUFDTyxJQUFJO1FBQ25CLElBQUlBLFFBQVFGLE1BQU0sR0FBRztZQUNuQixJQUFJLENBQUNoQixTQUFTbUIsT0FBTyxDQUFDQyxJQUFJLEdBQUc7Z0JBQzNCRCxPQUFPLENBQUNDLElBQUksR0FBRyxDQUFDO1lBQ2xCO1lBQ0FELFVBQVVBLE9BQU8sQ0FBQ0MsSUFBSTtZQUN0QjtRQUNGO1FBRUEsSUFBSXJCLGNBQWNvQixPQUFPLENBQUNDLElBQUksS0FBS3JCLGNBQWNNLE1BQU07WUFDckRjLE9BQU8sQ0FBQ0MsSUFBSSxHQUFHdEIsT0FBTyxDQUFDLEdBQUdxQixPQUFPLENBQUNDLElBQUksRUFBRWY7UUFDMUMsT0FBTztZQUNMYyxPQUFPLENBQUNDLElBQUksR0FBR2Y7UUFDakI7SUFDRjtJQUVBLE9BQU9GO0FBQ1Q7QUFFQSxTQUFTWSxXQUFXSyxHQUFHO0lBQ3JCLE9BQU9BLFFBQVEsZUFBZUEsUUFBUSxpQkFBaUJBLFFBQVE7QUFDakUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zRC1BSS1FbmdsaXNoLy4vbm9kZV9tb2R1bGVzL3NldC12YWx1ZS9pbmRleC5qcz8xODZkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogc2V0LXZhbHVlIDxodHRwczovL2dpdGh1Yi5jb20vam9uc2NobGlua2VydC9zZXQtdmFsdWU+XG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LTIwMTUsIDIwMTcsIEpvbiBTY2hsaW5rZXJ0LlxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIHNwbGl0ID0gcmVxdWlyZSgnc3BsaXQtc3RyaW5nJyk7XG52YXIgZXh0ZW5kID0gcmVxdWlyZSgnZXh0ZW5kLXNoYWxsb3cnKTtcbnZhciBpc1BsYWluT2JqZWN0ID0gcmVxdWlyZSgnaXMtcGxhaW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCdpcy1leHRlbmRhYmxlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob2JqLCBwcm9wLCB2YWwpIHtcbiAgaWYgKCFpc09iamVjdChvYmopKSB7XG4gICAgcmV0dXJuIG9iajtcbiAgfVxuXG4gIGlmIChBcnJheS5pc0FycmF5KHByb3ApKSB7XG4gICAgcHJvcCA9IFtdLmNvbmNhdC5hcHBseShbXSwgcHJvcCkuam9pbignLicpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBwcm9wICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBvYmo7XG4gIH1cblxuICB2YXIga2V5cyA9IHNwbGl0KHByb3AsIHtzZXA6ICcuJywgYnJhY2tldHM6IHRydWV9KS5maWx0ZXIoaXNWYWxpZEtleSk7XG4gIHZhciBsZW4gPSBrZXlzLmxlbmd0aDtcbiAgdmFyIGlkeCA9IC0xO1xuICB2YXIgY3VycmVudCA9IG9iajtcblxuICB3aGlsZSAoKytpZHggPCBsZW4pIHtcbiAgICB2YXIga2V5ID0ga2V5c1tpZHhdO1xuICAgIGlmIChpZHggIT09IGxlbiAtIDEpIHtcbiAgICAgIGlmICghaXNPYmplY3QoY3VycmVudFtrZXldKSkge1xuICAgICAgICBjdXJyZW50W2tleV0gPSB7fTtcbiAgICAgIH1cbiAgICAgIGN1cnJlbnQgPSBjdXJyZW50W2tleV07XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAoaXNQbGFpbk9iamVjdChjdXJyZW50W2tleV0pICYmIGlzUGxhaW5PYmplY3QodmFsKSkge1xuICAgICAgY3VycmVudFtrZXldID0gZXh0ZW5kKHt9LCBjdXJyZW50W2tleV0sIHZhbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cnJlbnRba2V5XSA9IHZhbDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufTtcblxuZnVuY3Rpb24gaXNWYWxpZEtleShrZXkpIHtcbiAgcmV0dXJuIGtleSAhPT0gJ19fcHJvdG9fXycgJiYga2V5ICE9PSAnY29uc3RydWN0b3InICYmIGtleSAhPT0gJ3Byb3RvdHlwZSc7XG59XG4iXSwibmFtZXMiOlsic3BsaXQiLCJyZXF1aXJlIiwiZXh0ZW5kIiwiaXNQbGFpbk9iamVjdCIsImlzT2JqZWN0IiwibW9kdWxlIiwiZXhwb3J0cyIsIm9iaiIsInByb3AiLCJ2YWwiLCJBcnJheSIsImlzQXJyYXkiLCJjb25jYXQiLCJhcHBseSIsImpvaW4iLCJrZXlzIiwic2VwIiwiYnJhY2tldHMiLCJmaWx0ZXIiLCJpc1ZhbGlkS2V5IiwibGVuIiwibGVuZ3RoIiwiaWR4IiwiY3VycmVudCIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/set-value/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/set-value/node_modules/is-extendable/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/set-value/node_modules/is-extendable/index.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("/*!\n * is-extendable <https://github.com/jonschlinkert/is-extendable>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */ \nmodule.exports = function isExtendable(val) {\n    return typeof val !== \"undefined\" && val !== null && (typeof val === \"object\" || typeof val === \"function\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2V0LXZhbHVlL25vZGVfbW9kdWxlcy9pcy1leHRlbmRhYmxlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7OztDQUtDLEdBRUQ7QUFFQUEsT0FBT0MsT0FBTyxHQUFHLFNBQVNDLGFBQWFDLEdBQUc7SUFDeEMsT0FBTyxPQUFPQSxRQUFRLGVBQWVBLFFBQVEsUUFDdkMsUUFBT0EsUUFBUSxZQUFZLE9BQU9BLFFBQVEsVUFBUztBQUMzRCIsInNvdXJjZXMiOlsid2VicGFjazovLzNELUFJLUVuZ2xpc2gvLi9ub2RlX21vZHVsZXMvc2V0LXZhbHVlL25vZGVfbW9kdWxlcy9pcy1leHRlbmRhYmxlL2luZGV4LmpzP2NjNjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBpcy1leHRlbmRhYmxlIDxodHRwczovL2dpdGh1Yi5jb20vam9uc2NobGlua2VydC9pcy1leHRlbmRhYmxlPlxuICpcbiAqIENvcHlyaWdodCAoYykgMjAxNSwgSm9uIFNjaGxpbmtlcnQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzRXh0ZW5kYWJsZSh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgIT09ICd1bmRlZmluZWQnICYmIHZhbCAhPT0gbnVsbFxuICAgICYmICh0eXBlb2YgdmFsID09PSAnb2JqZWN0JyB8fCB0eXBlb2YgdmFsID09PSAnZnVuY3Rpb24nKTtcbn07XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImlzRXh0ZW5kYWJsZSIsInZhbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/set-value/node_modules/is-extendable/index.js\n");

/***/ })

};
;